<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Smoosie Calendar - Enterprise Edition</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            background: rgba(255, 255, 255, 0.95);
            padding: 20px;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }

        .calendar-container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: saturate(180%) blur(20px);
            -webkit-backdrop-filter: saturate(180%) blur(20px);
            border-radius: 20px;
            box-shadow: 
                0 20px 40px -12px rgba(0, 0, 0, 0.15),
                0 0 0 1px rgba(255, 255, 255, 0.2);
            overflow: hidden;
            max-width: 400px;
            width: 100%;
            margin: 0 auto;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

        .calendar-container:hover {
            transform: translateY(-4px);
            box-shadow: 
                0 25px 50px -12px rgba(0, 0, 0, 0.2),
                0 0 0 1px rgba(255, 255, 255, 0.3);
        }

        .calendar-header {
            padding: 24px 28px 20px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            text-align: center;
            position: relative;
        }

        .calendar-title {
            font-size: 18px;
            font-weight: 600;
            letter-spacing: -0.02em;
        }

        .nav-button {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            color: white;
            font-size: 24px;
            cursor: pointer;
            padding: 8px;
            border-radius: 50%;
            transition: background 0.2s ease;
        }

        .nav-button:hover {
            background: rgba(255, 255, 255, 0.2);
        }

        .nav-button.prev {
            left: 10px;
        }

        .nav-button.next {
            right: 10px;
        }

        .calendar-grid {
            padding: 20px 24px 24px;
        }

        .weekdays {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 8px;
            margin-bottom: 12px;
        }

        .weekday {
            text-align: center;
            font-size: 12px;
            font-weight: 600;
            color: #6b7280;
            padding: 8px 0;
            letter-spacing: 0.02em;
            text-transform: uppercase;
        }

        .days {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 4px;
        }

        .day {
            aspect-ratio: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 14px;
            font-weight: 500;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
            position: relative;
            color: #374151;
            min-height: 40px;
        }

        .day:hover {
            background: rgba(102, 126, 234, 0.1);
            transform: scale(1.05);
        }

        .day.other-month {
            color: #d1d5db;
            cursor: default;
        }

        .day.other-month:hover {
            background: none;
            transform: none;
        }

        .day.today {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            font-weight: 600;
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
        }

        .day.today:hover {
            transform: scale(1.1);
            box-shadow: 0 6px 16px rgba(102, 126, 234, 0.4);
        }

        .day.has-event {
            position: relative;
        }

        .day.has-event::after {
            content: "";
            position: absolute;
            bottom: 2px;
            left: 50%;
            transform: translateX(-50%);
            width: 4px;
            height: 4px;
            background: #f59e0b;
            border-radius: 50%;
        }

        .calendar-footer {
            padding: 16px 24px 20px;
            border-top: 1px solid rgba(0, 0, 0, 0.06);
            background: rgba(248, 250, 252, 0.8);
            text-align: center;
            font-size: 14px;
            color: #6b7280;
            font-weight: 500;
        }

        /* Modal Styles */
        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            backdrop-filter: blur(8px);
            -webkit-backdrop-filter: blur(8px);
            display: none;
            align-items: center;
            justify-content: center;
            z-index: 1000;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .modal-overlay.show {
            display: flex;
            opacity: 1;
        }

        .modal {
            background: white;
            border-radius: 20px;
            padding: 32px;
            max-width: 480px;
            width: 90%;
            box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
            transform: scale(0.9);
            transition: transform 0.3s ease;
        }

        .modal-overlay.show .modal {
            transform: scale(1);
        }

        .modal-header {
            text-align: center;
            margin-bottom: 24px;
        }

        .modal-title {
            font-size: 24px;
            font-weight: 700;
            color: #1a1a1a;
            margin-bottom: 8px;
        }

        .modal-date {
            font-size: 16px;
            color: #667eea;
            font-weight: 500;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-label {
            display: block;
            font-size: 14px;
            font-weight: 600;
            color: #374151;
            margin-bottom: 8px;
        }

        .form-input {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid #e5e7eb;
            border-radius: 12px;
            font-size: 14px;
            transition: border-color 0.2s ease;
        }

        .form-input:focus {
            outline: none;
            border-color: #667eea;
        }

        .time-inputs {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 12px;
        }

        .modal-actions {
            display: flex;
            gap: 12px;
            margin-top: 32px;
        }

        .btn {
            flex: 1;
            padding: 14px 24px;
            border: none;
            border-radius: 12px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(102, 126, 234, 0.3);
        }

        .btn-secondary {
            background: #f3f4f6;
            color: #374151;
        }

        .btn-secondary:hover {
            background: #e5e7eb;
        }

        /* Success Modal Styles */
        .success-modal {
            background: white;
            border-radius: 20px;
            padding: 40px;
            max-width: 520px;
            width: 90%;
            box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
            text-align: center;
        }

        .success-icon {
            width: 80px;
            height: 80px;
            background: linear-gradient(135deg, #10b981 0%, #059669 100%);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 24px;
            font-size: 40px;
            color: white;
        }

        .success-title {
            font-size: 28px;
            font-weight: 700;
            color: #1a1a1a;
            margin-bottom: 16px;
        }

        .success-subtitle {
            font-size: 16px;
            color: #6b7280;
            margin-bottom: 32px;
            line-height: 1.5;
        }

        .meeting-details {
            background: #f8fafc;
            border-radius: 16px;
            padding: 24px;
            margin-bottom: 32px;
            text-align: left;
        }

        .detail-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 12px 0;
            border-bottom: 1px solid #e2e8f0;
        }

        .detail-row:last-child {
            border-bottom: none;
        }

        .detail-label {
            font-weight: 600;
            color: #374151;
        }

        .detail-value {
            color: #6b7280;
            font-family: monospace;
            font-size: 14px;
        }

        .meeting-link {
            background: #dbeafe;
            color: #1d4ed8;
            padding: 8px 12px;
            border-radius: 8px;
            font-family: monospace;
            font-size: 12px;
            word-break: break-all;
        }

        .integration-status {
            display: flex;
            align-items: center;
            gap: 8px;
            margin-bottom: 24px;
            padding: 16px;
            background: #f0fdf4;
            border-radius: 12px;
            border: 1px solid #bbf7d0;
        }

        .status-icon {
            width: 20px;
            height: 20px;
            background: #10b981;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 12px;
        }

        .status-text {
            color: #166534;
            font-weight: 500;
            font-size: 14px;
        }

        /* Responsive design */
        @media (max-width: 480px) {
            .calendar-container {
                margin: 10px;
                max-width: none;
            }
            
            .calendar-header {
                padding: 20px 24px 16px;
            }
            
            .calendar-title {
                font-size: 16px;
            }

            .modal, .success-modal {
                padding: 24px;
                margin: 20px;
            }

            .modal-title, .success-title {
                font-size: 20px;
            }
        }
    </style>
</head>
<body>
    <div class="calendar-container">
        <div class="calendar-header">
            <button class="nav-button prev" onclick="calendar.prevMonth()">&lt;</button>
            <div class="calendar-title" id="currentMonthYear"></div>
            <button class="nav-button next" onclick="calendar.nextMonth()">&gt;</button>
        </div>
        
        <div class="calendar-grid">
            <div class="weekdays">
                <div class="weekday">Sun</div>
                <div class="weekday">Mon</div>
                <div class="weekday">Tue</div>
                <div class="weekday">Wed</div>
                <div class="weekday">Thu</div>
                <div class="weekday">Fri</div>
                <div class="weekday">Sat</div>
            </div>
            <div class="days" id="calendarDays">
                <!-- Days will be dynamically generated here -->
            </div>
        </div>
        
        <div class="calendar-footer">
            Enterprise Calendar - Automated Integration Enabled
        </div>
    </div>

    <!-- Meeting Modal -->
    <div class="modal-overlay" id="meetingModal">
        <div class="modal">
            <div class="modal-header">
                <div class="modal-title">Schedule Meeting</div>
                <div class="modal-date" id="selectedDate"></div>
            </div>
            
            <form id="meetingForm">
                <div class="form-group">
                    <label class="form-label" for="meetingTitle">Meeting Title</label>
                    <input type="text" id="meetingTitle" class="form-input" placeholder="Enter meeting title" required>
                </div>
                
                <div class="form-group">
                    <label class="form-label">Time</label>
                    <div class="time-inputs">
                        <input type="time" id="startTime" class="form-input" value="09:00" required>
                        <input type="time" id="endTime" class="form-input" value="10:00" required>
                    </div>
                </div>
                
                <div class="form-group">
                    <label class="form-label" for="meetingType">Meeting Type</label>
                    <select id="meetingType" class="form-input" required>
                        <option value="">Select meeting type</option>
                        <option value="zoom">Zoom Meeting</option>
                        <option value="google-meet">Google Meet</option>
                        <option value="in-person">In-Person</option>
                        <option value="phone">Phone Call</option>
                    </select>
                </div>
                
                <div class="form-group">
                    <label class="form-label" for="attendees">Attendees (Email)</label>
                    <input type="email" id="attendees" class="form-input" placeholder="Enter attendee emails (comma separated)">
                </div>
                
                <div class="modal-actions">
                    <button type="button" class="btn btn-secondary" onclick="closeMeetingModal()">Cancel</button>
                    <button type="submit" class="btn btn-primary">Schedule Meeting</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Success Modal -->
    <div class="modal-overlay" id="successModal">
        <div class="success-modal">
            <div class="success-icon">✓</div>
            <div class="success-title">Meeting Scheduled Successfully!</div>
            <div class="success-subtitle">Your meeting has been automatically integrated with your calendar and all attendees have been notified.</div>
            
            <div class="integration-status">
                <div class="status-icon">✓</div>
                <div class="status-text">Calendar invite sent • Meeting link generated • Reminders set</div>
            </div>
            
            <div class="meeting-details" id="meetingDetails">
                <!-- Meeting details will be populated here -->
            </div>
            
            <div class="modal-actions">
                <button type="button" class="btn btn-primary" onclick="closeSuccessModal()">Done</button>
            </div>
        </div>
    </div>

    <script>
        const calendar = {
            currentDate: new Date(),
            today: new Date(),
            events: {
                // Example events: 'YYYY-MM-DD': true
                '2025-08-28': true,
                '2025-08-30': true
            },

            init: function() {
                this.renderCalendar();
            },

            renderCalendar: function() {
                const monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
                const year = this.currentDate.getFullYear();
                const month = this.currentDate.getMonth();

                document.getElementById('currentMonthYear').textContent = `${monthNames[month]} ${year}`;

                const firstDayOfMonth = new Date(year, month, 1).getDay();
                const daysInMonth = new Date(year, month + 1, 0).getDate();
                const daysInPrevMonth = new Date(year, month, 0).getDate();

                let daysHtml = '';

                // Days from previous month
                for (let i = firstDayOfMonth; i > 0; i--) {
                    daysHtml += `<div class="day other-month">${daysInPrevMonth - i + 1}</div>`;
                }

                // Days of current month
                for (let i = 1; i <= daysInMonth; i++) {
                    const date = new Date(year, month, i);
                    const formattedDate = this.formatDate(date);
                    let classList = 'day';
                    if (this.isSameDay(date, this.today)) {
                        classList += ' today';
                    }
                    if (this.events[formattedDate]) {
                        classList += ' has-event';
                    }
                    daysHtml += `<div class="${classList}" onclick="openMeetingModal('${monthNames[month]} ${i}, ${year}')">${i}</div>`;
                }

                // Days from next month
                const totalDaysDisplayed = firstDayOfMonth + daysInMonth;
                const remainingDays = 42 - totalDaysDisplayed; // Ensure 6 rows for consistency
                for (let i = 1; i <= remainingDays; i++) {
                    daysHtml += `<div class="day other-month">${i}</div>`;
                }

                document.getElementById('calendarDays').innerHTML = daysHtml;
            },

            prevMonth: function() {
                this.currentDate.setMonth(this.currentDate.getMonth() - 1);
                this.renderCalendar();
            },

            nextMonth: function() {
                this.currentDate.setMonth(this.currentDate.getMonth() + 1);
                this.renderCalendar();
            },
            
            isSameDay: function(date1, date2) {
                return date1.getDate() === date2.getDate() &&
                       date1.getMonth() === date2.getMonth() &&
                       date1.getFullYear() === date2.getFullYear();
            },
            
            formatDate: function(date) {
                const year = date.getFullYear();
                const month = String(date.getMonth() + 1).padStart(2, '0');
                const day = String(date.getDate()).padStart(2, '0');
                return `${year}-${month}-${day}`;
            }
        };
        
        // Initialize calendar when DOM is loaded
        document.addEventListener('DOMContentLoaded', function() {
            calendar.init();
        });

        function openMeetingModal(date) {
            document.getElementById('selectedDate').textContent = date;
            document.getElementById('meetingModal').classList.add('show');
        }

        function closeMeetingModal() {
            document.getElementById('meetingModal').classList.remove('show');
            document.getElementById('meetingForm').reset();
        }

        function closeSuccessModal() {
            document.getElementById('successModal').classList.remove('show');
        }

        function generateMeetingLink(type) {
            const links = {
                'zoom': 'https://zoom.us/j/' + Math.floor(Math.random() * 1000000000),
                'google-meet': 'https://meet.google.com/' + Math.random().toString(36).substring(2, 15),
                'in-person': 'Conference Room A, 123 Business Ave',
                'phone': '+1 (555) ' + Math.floor(Math.random() * 900 + 100) + '-' + Math.floor(Math.random() * 9000 + 1000)
            };
            return links[type] || 'TBD';
        }

        function generateCalendarId() {
            return 'cal_' + Math.random().toString(36).substring(2, 15);
        }

        // Handle form submission
        document.getElementById('meetingForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = {
                date: document.getElementById('selectedDate').textContent,
                title: document.getElementById('meetingTitle').value,
                startTime: document.getElementById('startTime').value,
                endTime: document.getElementById('endTime').value,
                type: document.getElementById('meetingType').value,
                attendees: document.getElementById('attendees').value
            };
            
            // Simulate API integration delay
            const submitBtn = e.target.querySelector('.btn-primary');
            submitBtn.textContent = 'Processing...';
            submitBtn.disabled = true;
            
            setTimeout(() => {
                // Generate meeting link and calendar ID
                const meetingLink = generateMeetingLink(formData.type);
                const calendarId = generateCalendarId();
                
                // Populate success modal
                const detailsHtml = `
                    <div class="detail-row">
                        <span class="detail-label">Meeting Title:</span>
                        <span class="detail-value">${formData.title}</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Date & Time:</span>
                        <span class="detail-value">${formData.date}, ${formData.startTime} - ${formData.endTime}</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Meeting Type:</span>
                        <span class="detail-value">${formData.type.replace('-', ' ').toUpperCase()}</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Meeting Link:</span>
                        <div class="meeting-link">${meetingLink}</div>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Calendar ID:</span>
                        <span class="detail-value">${calendarId}</span>
                    </div>
                    ${formData.attendees ? `
                    <div class="detail-row">
                        <span class="detail-label">Attendees:</span>
                        <span class="detail-value">${formData.attendees}</span>
                    </div>
                    ` : ''}
                `;
                
                document.getElementById('meetingDetails').innerHTML = detailsHtml;
                
                // Close scheduling modal and show success modal
                closeMeetingModal();
                document.getElementById('successModal').classList.add('show');
                
                // Reset button
                submitBtn.textContent = 'Schedule Meeting';
                submitBtn.disabled = false;
                
            }, 2000); // 2 second delay to simulate API processing
        });

        // Close modal when clicking outside
        document.getElementById('meetingModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeMeetingModal();
            }
        });

        document.getElementById('successModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeSuccessModal();
            }
        });
    </script>
</body>
</html>

